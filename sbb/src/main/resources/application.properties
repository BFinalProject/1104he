# MySQL 드라이버 설정
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# DB URL
spring.datasource.url=jdbc:mysql://localhost:3306/datedb?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul 

# DB username
spring.datasource.username=sky6548

# DB password
spring.datasource.password=1234

# JPA쿼리문 확인여부
spring.jpa.show-sql=true

# DDL(create, alter, drop) 정의시 DB의 고유 기능을 사용할 수 있다.
#none - 엔티티가 변경되더라도 데이터베이스를 변경하지 않는다.
#update - 엔티티의 변경된 부분만 적용한다.
#validate - 변경사항이 있는지 검사만 한다.
#create - 스프링부트 서버가 시작될때 모두 drop하고 다시 생성한다.
#create-drop - create와 동일하다. 하지만 종료시에도 모두 drop 한다
spring.jpa.hibernate.ddl-auto=update

# JPA의 구현체인 Hibernate가 동작하면서 발생한 SQL의 가독성을 높여준다.
spring.jpa.properties.hibernate.format_sql=true

#Webclient
server.port=${service_port:8080}
spring.application.name=webserver
spring.main.allow-bean-definition-overriding: true
#Spring WebFlux는 메모리 내 데이터 버퍼링을 위한 기본 메모리 제한을 256KB로 구성
#메모리 제한을 재설정
spring.codec.max-in-memory-size=1MB


#Mail
spring.mail.host=smtp.naver.com
spring.mail.port=465
spring.mail.username=fc0209
spring.mail.password=2957k7918!2K
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.ssl.enable=true
spring.mail.properties.mail.smtp.ssl.trust=smtp.naver.com
spring.mail.properties.mail.smtp.starttls.enable=true

logging.level.root=info

#thymeleaf
spring.thymeleaf.cache=false

